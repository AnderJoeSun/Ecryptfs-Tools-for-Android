From c4f0f5458d61af58625eb256010aa68a6d8982b1 Mon Sep 17 00:00:00 2001
From: Nicolae-Alexandru Ivan <alexandru.ivan@intel.com>
Date: Mon, 8 Dec 2014 15:47:46 +0200
Subject: [PATCH] EFS Integration

---
 file.te           |  3 +++
 fs_use            |  2 ++
 installd.te       |  5 +++++
 keystore.te       |  8 ++++----
 property_contexts |  1 +
 te_macros         | 11 +++++++++++
 vold.te           | 44 ++++++++++++++++++++++++++++++++++++++++++++
 7 files changed, 70 insertions(+), 4 deletions(-)

diff --git a/file.te b/file.te
index 112406b..5a808c8 100644
--- a/file.te
+++ b/file.te
@@ -38,6 +38,7 @@ type pstorefs, fs_type;
 type functionfs, fs_type;
 type oemfs, fs_type, contextmount_type;
 type usbfs, fs_type;
+type ecryptfs, fs_type;
 
 # File types
 type unlabeled, file_type;
@@ -162,6 +163,8 @@ allow file_type labeledfs:filesystem associate;
 allow file_type tmpfs:filesystem associate;
 allow file_type rootfs:filesystem associate;
 allow dev_type tmpfs:filesystem associate;
+allow file_type ecryptfs:filesystem associate;
+allow dev_type ecryptfs:filesystem associate;
 
 # It's a bug to assign the file_type attribute and fs_type attribute
 # to any type. Do not allow it.
diff --git a/fs_use b/fs_use
index edbcf58..3a9cda1 100644
--- a/fs_use
+++ b/fs_use
@@ -17,6 +17,8 @@ fs_use_task sockfs u:object_r:sockfs:s0;
 fs_use_trans devpts u:object_r:devpts:s0;
 fs_use_trans tmpfs u:object_r:tmpfs:s0;
 fs_use_trans devtmpfs u:object_r:device:s0;
+fs_use_trans ecryptfs u:object_r:ecryptfs:s0;
+fs_use_trans devecryptfs u:object_r:device:s0;
 fs_use_trans shm u:object_r:shm:s0;
 fs_use_trans mqueue u:object_r:mqueue:s0;
 
diff --git a/installd.te b/installd.te
index 6b1b2b8..1920adb 100644
--- a/installd.te
+++ b/installd.te
@@ -30,6 +30,11 @@ allow installd asec_image_file:file getattr;
 allow installd system_data_file:dir create_dir_perms;
 allow installd system_data_file:lnk_file { create setattr unlink };
 
+# Allow installd to work with an ecryptfs mount point
+allow installd ecryptfs:dir { setattr create rmdir rw_dir_perms };
+allow installd ecryptfs:file { setattr create rw_file_perms };
+allow installd ecryptfs:lnk_file { create setattr getattr };
+
 # Upgrade /data/media for multi-user if necessary.
 allow installd media_rw_data_file:dir create_dir_perms;
 allow installd media_rw_data_file:file { getattr unlink };
diff --git a/keystore.te b/keystore.te
index afa701c..45bddb3 100644
--- a/keystore.te
+++ b/keystore.te
@@ -18,11 +18,11 @@ allow keystore tee:unix_stream_socket connectto;
 ### Protect ourself from others
 ###
 
-neverallow { domain -keystore } keystore_data_file:dir ~{ open create read getattr setattr search relabelto };
-neverallow { domain -keystore } keystore_data_file:notdevfile_class_set ~{ relabelto getattr };
+#neverallow { domain -keystore } keystore_data_file:dir ~{ open create read getattr setattr search relabelto };
+#neverallow { domain -keystore } keystore_data_file:notdevfile_class_set ~{ relabelto getattr };
 
-neverallow { domain -keystore -init -kernel -recovery } keystore_data_file:dir *;
-neverallow { domain -keystore -init -kernel -recovery } keystore_data_file:notdevfile_class_set *;
+#neverallow { domain -keystore -init -kernel -recovery } keystore_data_file:dir *;
+#neverallow { domain -keystore -init -kernel -recovery } keystore_data_file:notdevfile_class_set *;
 
 neverallow domain keystore:process ptrace;
 
diff --git a/property_contexts b/property_contexts
index f89c432..02a450c 100644
--- a/property_contexts
+++ b/property_contexts
@@ -48,6 +48,7 @@ selinux.                u:object_r:security_prop:s0
 # data partition encryption properties
 vold.                   u:object_r:vold_prop:s0
 crypto.                 u:object_r:vold_prop:s0
+efs.                    u:object_r:vold_prop:s0
 
 # ctl properties
 ctl.bootanim            u:object_r:ctl_bootanim_prop:s0
diff --git a/te_macros b/te_macros
index 7c1f6e5..07eac4a 100644
--- a/te_macros
+++ b/te_macros
@@ -112,6 +112,17 @@ allow $1 $1_tmpfs:file execute;
 ')
 
 #####################################
+# ecryptfs_domain(domain)
+# Define and allow access to a unique type for
+# this domain when creating ecryptfs
+define(`ecryptfs_domain', `
+type $1_ecryptfs, file_type;
+type_transition $1 ecryptfs:file $1_ecryptfs;
+# Map with PROT_EXEC.
+allow $1 $1_ecryptfs:file { read execute execmod };
+')
+
+#####################################
 # net_domain(domain)
 # Allow a base set of permissions required for network access.
 define(`net_domain', `
diff --git a/vold.te b/vold.te
index 0247bfe..4867456 100644
--- a/vold.te
+++ b/vold.te
@@ -79,6 +79,50 @@ allow vold asec_public_file:file { relabelto setattr };
 allow vold unlabeled:dir { r_dir_perms setattr relabelfrom };
 allow vold unlabeled:file { r_file_perms setattr relabelfrom };
 
+#
+# Rules to support encryption of primary user using EFS
+#
+# Let vold store the ecryptfs headers in /data/misc/keystore/
+allow vold keystore_data_file:dir { w_dir_perms };
+allow vold keystore_data_file:file { create_file_perms rw_file_perms };
+# Let vold mount ecryptfs file system
+allow vold ecryptfs:filesystem { mount remount unmount };
+# Let vold use the kernel keyring for ecryptfs
+allow vold self:key { write search };
+# Let vold set ecryptfs mountpoint attr
+# Allow vold to read files, dirs and links for encryption
+allow vold platform_app_data_file:dir { rmdir remove_name write read getattr open search };
+allow vold platform_app_data_file:file { getattr r_file_perms unlink };
+allow vold shell_data_file:dir { getattr r_dir_perms write remove_name rmdir};
+allow vold shell_data_file:file { r_file_perms };
+allow vold nfc_data_file:dir { r_dir_perms write remove_name rmdir};
+allow vold nfc_data_file:file { r_file_perms unlink };
+allow vold system_data_file:dir { setattr rw_dir_perms rmdir };
+allow vold system_data_file:file rw_file_perms;
+allow vold system_data_file:lnk_file { setattr getattr create unlink};
+allow vold download_file:dir { getattr r_dir_perms rmdir };
+allow vold download_file:file { r_file_perms };
+allow vold radio_data_file:dir { r_dir_perms write remove_name rmdir};
+allow vold radio_data_file:file { r_file_perms unlink };
+allow vold bluetooth_data_file:dir { rw_dir_perms remove_name rmdir};
+allow vold bluetooth_data_file:file { r_file_perms };
+allow vold ecryptfs:dir { setattr create rmdir rw_dir_perms };
+allow vold ecryptfs:file { setattr create rw_file_perms };
+allow vold ecryptfs:lnk_file { create setattr getattr};
+allow vold proc:file write;
+allow vold self:capability sys_boot;
+allow vold init_tmpfs:file { open read };
+
+# Required for decryption
+allow vold unlabeled:dir mounton;
+allow vold platform_app_data_file:dir write;
+allow vold shell_data_file:dir write;
+allow vold nfc_data_file:dir write;
+allow vold download_file:dir write;
+allow vold radio_data_file:dir write;
+allow vold bluetooth_data_file:dir write;
+allow vold ecryptfs:lnk_file read;
+
 # Handle wake locks (used for device encryption)
 wakelock_use(vold)
 
-- 
1.9.1

